{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Deploy Network traffic Load Balancers and components for FortiGate Autoscale.",
    "Parameters": {
        "ResourceTagPrefix": {
            "Type": "String",
            "AllowedPattern": "[0-9a-zA-Z@.#-]+",
            "MaxLength": 64,
            "ConstraintDescription": "Resource tag prefix can include numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 64.",
            "Description": "A prefix for tag key ResourceGroup on all resources. It's also used as the name prefix of all applicable resources. Can only contain numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 64."
        },
        "CustomIdentifier": {
            "Type": "String",
            "Default": "fgtASG",
            "MaxLength": "10",
            "AllowedPattern": "[A-Za-z0-9]+",
            "ConstraintDescription": "must only contain uppercase and lowercase letters and numbers",
            "Description": "A short custom identifier as resource name prefix. This shorter version of name prefix is used on a resource that Resource tag prefix cannot apply to. Must be at most 10 characters long and only contain uppercase, lowercase letters, and numbers. Max length is 10."
        },
        "UniqueId": {
            "Type": "String",
            "MaxLength": "8",
            "AllowedPattern": "[A-Za-z0-9]+",
            "ConstraintDescription": "must only contain uppercase and lowercase letters and digits",
            "Description": "A random string as a unique ID for all resources in this deployment stack and nested stacks. Max length is 8."
        },
        "TrafficProtocol": {
            "Type": "String",
            "Default": "HTTPS",
            "AllowedValues": ["HTTP", "HTTPS", "TCP"],
            "ConstraintDescription": "value must be chosen from the provided options.",
            "Description": "The protocol to use for routing traffic to the targets."
        },
        "TrafficPort": {
            "Type": "Number",
            "Default": 443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "Port for balancing incoming web traffic. Minimum is 1. Maximum is 65535."
        },
        "HealthCheckPort": {
            "Type": "Number",
            "Default": 443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "Port that responds load balancing target group health check probes. Minimum is 1. Maximum is 65535."
        },
        "FgtTargetGroupHealthCheckThreshold": {
            "Type": "Number",
            "Default": 3,
            "MinValue": 2,
            "MaxValue": 10,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The number of consecutive health check failures required before considering a FortiGate instance unhealthy. Minimum is 3."
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "The existing VPC ID where you can register target from."
        },
        "FgtSubnetIds": {
            "Type": "String",
            "Description": "A comma-delimited list of subnet IDs that FortiGate Autoscale instances locate in."
        },
        "NewInternalLoadBalancer": {
            "Type": "String",
            "Default": "yes",
            "AllowedValues": ["yes", "no"],
            "ConstraintDescription": "must choose from the provided options.",
            "Description": "Create an internal load balancer to route traffic from FortiGate to targets in a specified target group."
        },
        "InternalTargetGroupHealthCheckPath": {
            "Type": "String",
            "Default": "/",
            "AllowedPattern": "^/[0-9a-zA-Z-/]*$",
            "MaxLength": 1024,
            "ConstraintDescription": "This path must begin with a '/' character, and can be at most 1024 characters in length.",
            "Description": "Optional. The destination path for health checks. This path must begin with a '/' character, and can be at most 1024 characters in length."
        },
        "InternalLoadBalancingSubnetIds": {
            "Type": "String",
            "Description": "Optional. A comma-delimited list of subnet IDs that the internal load balancing instances locate in."
        }
    },
    "Conditions": {
        "IfNewInternalLoadBalancer": {
            "Fn::Equals": [
                {
                    "Ref": "NewInternalLoadBalancer"
                },
                "yes"
            ]
        }
    },
    "Mappings": {
        "ProtocolMap": {
            "HTTP": {
                "TargetGroup": "TCP",
                "HealthCheck": "HTTP",
                "Listener": "TCP"
            },
            "HTTPS": {
                "TargetGroup": "TCP",
                "HealthCheck": "HTTPS",
                "Listener": "TCP"
            },
            "TCP": {
                "TargetGroup": "TCP",
                "HealthCheck": "TCP",
                "Listener": "TCP"
            }
        }
    },
    "Resources": {
        "FgtLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Properties": {
                "Scheme": "internet-facing",
                "Type": "network",
                "Subnets": {
                    "Fn::Split": [
                        ",",
                        {
                            "Ref": "FgtSubnetIds"
                        }
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "CustomIdentifier"
                            },
                            {
                                "Ref": "UniqueId"
                            },
                            "frontend-elb"
                        ]
                    ]
                },
                "LoadBalancerAttributes": [
                    {
                        "Key": "load_balancing.cross_zone.enabled",
                        "Value": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "CustomIdentifier"
                                    },
                                    {
                                        "Ref": "UniqueId"
                                    },
                                    "frontend-elb"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "FgtTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "CustomIdentifier"
                            },
                            {
                                "Ref": "UniqueId"
                            },
                            "frontend-tg"
                        ]
                    ]
                },
                "Protocol": "TCP",
                "Port": {
                    "Ref": "TrafficPort"
                },
                "HealthCheckProtocol": "TCP",
                "HealthCheckPort": {
                    "Ref": "HealthCheckPort"
                },
                "HealthyThresholdCount": {
                    "Ref": "FgtTargetGroupHealthCheckThreshold"
                },
                "UnhealthyThresholdCount": {
                    "Ref": "FgtTargetGroupHealthCheckThreshold"
                },
                "VpcId": {
                    "Ref": "VpcId"
                },
                "TargetGroupAttributes": [
                    {
                        "Key": "deregistration_delay.timeout_seconds",
                        "Value": "30"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "CustomIdentifier"
                                    },
                                    {
                                        "Ref": "UniqueId"
                                    },
                                    "frontend-tg"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "FgtLoadBalancerTrafficListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "FgtLoadBalancer"
                },
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "FgtTargetGroup"
                        }
                    }
                ],
                "Protocol": {
                    "Fn::FindInMap": [
                        "ProtocolMap",
                        {
                            "Ref": "TrafficProtocol"
                        },
                        "Listener"
                    ]
                },
                "Port": {
                    "Ref": "TrafficPort"
                }
            }
        },
        "InternalLoadBalancer": {
            "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
            "Condition": "IfNewInternalLoadBalancer",
            "Properties": {
                "Scheme": "internal",
                "Type": "network",
                "Subnets": {
                    "Fn::Split": [
                        ",",
                        {
                            "Ref": "InternalLoadBalancingSubnetIds"
                        }
                    ]
                },
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "CustomIdentifier"
                            },
                            {
                                "Ref": "UniqueId"
                            },
                            "service-elb"
                        ]
                    ]
                },
                "LoadBalancerAttributes": [
                    {
                        "Key": "load_balancing.cross_zone.enabled",
                        "Value": "true"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "CustomIdentifier"
                                    },
                                    {
                                        "Ref": "UniqueId"
                                    },
                                    "service-elb"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "InternalTargetGroup": {
            "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
            "Condition": "IfNewInternalLoadBalancer",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "-",
                        [
                            {
                                "Ref": "CustomIdentifier"
                            },
                            {
                                "Ref": "UniqueId"
                            },
                            "service-tg"
                        ]
                    ]
                },
                "Protocol": {
                    "Fn::FindInMap": [
                        "ProtocolMap",
                        {
                            "Ref": "TrafficProtocol"
                        },
                        "TargetGroup"
                    ]
                },
                "Port": {
                    "Ref": "TrafficPort"
                },
                "HealthCheckProtocol": {
                    "Fn::FindInMap": [
                        "ProtocolMap",
                        {
                            "Ref": "TrafficProtocol"
                        },
                        "HealthCheck"
                    ]
                },
                "HealthCheckPort": "traffic-port",
                "VpcId": {
                    "Ref": "VpcId"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "CustomIdentifier"
                                    },
                                    {
                                        "Ref": "UniqueId"
                                    },
                                    "service-tg"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "ResourceGroup",
                        "Value": {
                            "Ref": "ResourceTagPrefix"
                        }
                    }
                ]
            }
        },
        "InternalLoadBalancerTrafficListener": {
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "Condition": "IfNewInternalLoadBalancer",
            "Properties": {
                "LoadBalancerArn": {
                    "Ref": "InternalLoadBalancer"
                },
                "DefaultActions": [
                    {
                        "Type": "forward",
                        "TargetGroupArn": {
                            "Ref": "InternalTargetGroup"
                        }
                    }
                ],
                "Protocol": {
                    "Fn::FindInMap": [
                        "ProtocolMap",
                        {
                            "Ref": "TrafficProtocol"
                        },
                        "Listener"
                    ]
                },
                "Port": {
                    "Ref": "TrafficPort"
                }
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Resource tagging configuration"
                    },
                    "Parameters": ["ResourceTagPrefix", "CustomIdentifier"]
                },
                {
                    "Label": {
                        "default": "FortiGate load balancer configuration"
                    },
                    "Parameters": [
                        "VpcId",
                        "FgtSubnetIds",
                        "TrafficProtocol",
                        "TrafficPort",
                        "FgtTargetGroupHealthCheckThreshold"
                    ]
                },
                {
                    "Label": {
                        "default": "Internal load balancer configuration"
                    },
                    "Parameters": [
                        "NewInternalLoadBalancer",
                        "InternalLoadBalancingSubnetIds",
                        "InternalTargetGroupHealthCheckPath"
                    ]
                }
            ],
            "ParameterLabels": {
                "ResourceTagPrefix": {
                    "default": "Resource tag prefix"
                },
                "CustomIdentifier": {
                    "default": "Resource name prefix"
                },
                "TrafficProtocol": {
                    "default": "Incoming traffic protocol"
                },
                "TrafficPort": {
                    "default": "Incoming traffic port"
                },
                "FgtTargetGroupHealthCheckThreshold": {
                    "default": "Healthy threshold"
                },
                "VpcId": {
                    "default": "VPC ID"
                },
                "FgtSubnetIds": {
                    "default": "Subnet ID list"
                },
                "NewInternalLoadBalancer": {
                    "default": "Create new load balancer"
                },
                "InternalTargetGroupHealthCheckPath": {
                    "default": "Health check path"
                },
                "InternalLoadBalancingSubnetIds": {
                    "default": "Subnet ID list"
                }
            }
        }
    },
    "Outputs": {
        "FgtLoadBalancerDnsName": {
            "Description": "FortiGate Autoscale load balancer DNS name",
            "Value": {
                "Fn::GetAtt": ["FgtLoadBalancer", "DNSName"]
            }
        },
        "FgtTargetGroupArn": {
            "Description": "FortiGate Autoscale target group ARN",
            "Value": {
                "Ref": "FgtTargetGroup"
            }
        },
        "InternalLoadBalancerDnsName": {
            "Description": "FortiGate protected service load balancer DNS Name",
            "Value": {
                "Fn::If": [
                    "IfNewInternalLoadBalancer",
                    {
                        "Fn::GetAtt": ["InternalLoadBalancer", "DNSName"]
                    },
                    ""
                ]
            }
        },
        "InternalTargetGroupArn": {
            "Description": "FortiGate protected service target group ARN",
            "Value": {
                "Fn::If": [
                    "IfNewInternalLoadBalancer",
                    {
                        "Ref": "InternalTargetGroup"
                    },
                    ""
                ]
            }
        }
    }
}
